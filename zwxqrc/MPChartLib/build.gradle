apply plugin: 'com.android.library'
//apply plugin: 'com.github.dcendents.android-maven'

//group='com.github.philjay'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 3
        versionName '3.1.0'
    }
    buildTypes {
        release {
            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    testOptions {
//        unitTests.returnDefaultValues = true // this prevents "not mocked" error
    }
}

dependencies {
   /* implementation 'androidx.annotation:annotation:1.0.0'
    api 'com.android.support:appcompat-v7:28.0.0'
    api 'com.android.support:design:28.0.0'*/
    implementation 'androidx.annotation:annotation:1.0.0'
    implementation rootProject.ext.config["support-v4"]
    implementation rootProject.ext.config["appcompat-v7"]
    implementation rootProject.ext.config["design"]

}

/*
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    options.charSet = 'UTF-8'
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
*/
